[[{"l":"Latest News","p":["FCP Cafe is a technical community for professional Final Cut Pro editors.","Want to contribute? Learn more here!"]},{"l":"Friday 26th May 2023","p":["Blood & Gold premieres today on Netflix. Fully edited in Final Cut Pro.","Chris at LateNite has also announced Transfer Toolbox on Twitter, allowing you to convert Final Cut Pro (for Mac) libraries into Final Cut Pro (for iPad) projects.","Created by Augusto de Fraga. Edited by Marcos Castiel (Ep's 1, 2, 5 & 7) and Pedro Ribeiro (Ep's 3, 4 & 6).","Dylan Bates - The Complete Guide to Final Cut Pro on iPad (53mins)","Edited by Knut Hake.","Everyone's talking about Final Cut Pro for iPad.","He also discovered that Final Cut Pro (for iPad) can actually read files from an external SSD.","Here's a collection of some of the great Final Cut Pro (for iPad) YouTube videos:","iJustine - Final Cut Pro on iPad Review - Forget everything you know about editing (13mins)","PetaPixel - Final Cut Pro for iPad Review: It FINALLY Happened! (12mins)","Ripple Training - Final Cut Pro for iPad Getting Started (39mins)","Six Colors - Hands on with Final Cut Pro for iPad (32mins)","The Verge - Final Cut Pro for iPad review: still rendering (10mins)","Turn of the Tide premieres today on Netflix. Fully edited in Final Cut Pro.","Tyler Stalman - Final Cut Pro for iPad: Guide & Review (16mins)","Want to contribute? Learn more here!","We will be adding an extensive case study here soon!"]}],[{"l":"Turn of the Tide","p":["Turn of the Tide premieres today on Netflix. Fully edited in Final Cut Pro.","Created by Augusto de Fraga. Edited by Marcos Castiel (Ep's 1, 2, 5 & 7) and Pedro Ribeiro (Ep's 3, 4 & 6).","We will be adding a full case study soon!","Turn of the Tide Poster"]}],[{"l":"Case Studies on Apple","p":["Here's some links to case studies on the Apple site:","Jenn Jager","Our Last Night","Blood Red Sky","Elsa Rhae and Barron Link","The Banker"]}],[{"i":"case-studies-on-fcpco","l":"Case Studies on fcp.co","p":["Here's some links to case studies on fcp.co:","Timbrée or How to Use Stamps to Build a Story (09 May 2023)","In Love with Final Cut Pro (10 February 2023)","Native BRAW Editing in Final Cut Pro with Chris Hocking (08 February 2023)","evrExpanse 3 Adds Features for EXIF Metadata XML Import into Final Cut Pro (08 February 2023)","BRAW Toolbox and Gyroflow Toolbox (29 January 2023)","Bright Future; Slow Progress (27 December 2022)","Using an OLED TV as a Monitor — Crazy or Genius? (29 November 2022)","The Very Best One-Key Shortcuts for Final Cut Pro (17 November 2022)","A New Script-focused Feature Film Workflow for Final Cut Pro (11 November 2022)","Solve Review and Approval Problems for Music on Video with Freque (04 November 2022)","You can find more over at fcp.co."]}],[{"i":"tips--tricks","l":"Tips & Tricks","p":["This page will be dedicated to user supplied tips and tricks."]}],[{"l":"Accessibility","p":["This section is dedicated to Accessibility."]},{"l":"Mac","p":["Here's an amazing video of Christopher Hills using Final Cut Pro on Mac using Switch Control."]},{"l":"iPad","p":["Here's an amazing video of Christopher Hills using Final Cut Pro on iPad using Switch Control."]}],[{"l":"Articles","p":["This section of the site is dedicated to linking to great external articles, as well as providing a space to write FCP Cafe specific articles."]}],[{"l":"Wish List","p":["Here's a list of the 30 most recently added Final Cut Pro feature requests:","Improve AV Output (April 6, 2023)","Being in Transformation/Crop/Distort mode shouldn't disable the skimmer (August 24, 2022)","Reveal in Browser with detached Audio/Video (May 19, 2022)"]}],[{"l":"Bug Tracker","p":["A/V-Output / Workspaces (May 27, 2022)","Crash - [FFAnchoredFavoriteMarker sequenceRecord]: unrecognized selector sent to instance (June 22, 2022)","Crash - Changing order of Roles in Timeline Index (June 10, 2021)","Crash - Dragging clips into new event (March 23, 2022)","Crash - failureToCloseUndoScope when repositioning titles within viewer (August 1, 2022)","Crash - FFSegmentStore compressionOutputCallback did not run at the expected QOS level (March 21, 2022)","Crash - Making a compound clip (November 29, 2021)","Crash - Missing method for retimeEffect (June 14, 2022)","Crash - objects in array must be FigTimeRangeAndObject objects! (June 14, 2022)","Crash - Repositioning a layer (February 17, 2022)","Crash - Video Tracker Controller Deallocation (October 19, 2021)","Crash dragging clips into another event (March 16, 2023)","Crash rejecting a section of a clip (March 28, 2023)","Crash scrubbing audio (February 4, 2022)","Dispatch queue: com.apple.flexo.scrub-buffer-update-thread (February 25, 2021)","FCPX stalled using iZotope RX9 (February 4, 2022)","Final Cut Pro 10.6 has issues with AC3 Encoded Audio (October 20, 2021)","Final Cut Pro 10.6 renders light in Motion Templates slightly differently than in 10.5.4 (October 22, 2021)","Final Cut Pro 10.6 won't import FCPXML with certain region settings (October 20, 2021)","Final Cut Pro Playback Preferences Click State Bug (May 10, 2022)","Here's a list of the 30 most recently reported Final Cut Pro bugs:","iMac Shuts Down While using Final Cut Pro X (July 22, 2020)","Missing an accessibility method for applying an individual effect/transition (October 16, 2019)","Neat Video v5.4.7 Crash (December 3, 2021)","Pan Mode Dropdown has wrong AXValue (March 22, 2022)","Playback (Viewer and Output) displays pumping video (June 2, 2022)","Titles/Generator with lots of Parameters slow in Inspector (November 25, 2021)","Unable to set in and out point in browser when viewer is active. (January 15, 2020)"]}],[{"l":"Plugins","p":["A directory of Final Cut Pro Plugins."]}],[{"l":"Workflow Extensions","p":["This page contains a collection of the latest Final Cut Pro Workflow Extensions.","You can use extensions to access features of third-party apps from within Final Cut Pro. For example, you can access stock footage, media management, and review-and-approve apps without ever leaving Final Cut Pro."]},{"l":"DAWBridge","p":["Sync your DAW with Final Cut Pro","View on Mac App Store","The DAW Bridge is an extension for Final Cut Pro that syncs Logic Pro, Pro Tools and other DAWs to Final Cut Pro. Using the DAW Bridge, cleaning up audio, composing music and mixing become virtually effortless and you never need to leave your favorite video editing software. When you sync your DAW with Final Cut Pro, audio will only play from your DAW so if you'd like your original FCP timeline audio to play as well, export your audio to your DAW using the share menu.","There are a few simple steps to linking Final Cut Pro with your DAW:","First, open the DAW Bridge extension in Final Cut Pro","Make sure your timecode settings are the same in both applications:","Project start timecode must match. For example, 01:00:00:00.","Frame rates must match for the timecode to work correctly. Hint: you can drag your Final Cut Pro project into the DAW Bridge window to pull its frame rate.","Match sample rates in your DAW and Final Cut Pro","In your DAW, navigate to the MTC settings and select 'DAW Bridge In'.","In Logic Pro you can find this in the transport or in Synchronization preferences.","In Pro Tools it is under Peripherals → Synchronization","Once your timelines are in sync, your DAW's playhead can control Final Cut Pro's playhead. The DAW Bridge combines the power of your audio and video editors. Imagine what you can do."]},{"l":"Simon Says Transcription","p":["-Mac/PC on-premise application for customers with high-security requirements: the A.I. runs locally, data is not sent to the cloud ( https://help.simonsays.ai/en/articles/2657987-do-you-have-an-on-premise-solution-for-high-security-environments)","* A project transcribed in any of the above applications is then accessible from any other Simon Says app.","About Simon Says is the advanced A.I. transcription and translation tool built for video pros. We make post production more efficient, saving significant time and costs. Import audio/video and in 100 languages: they accurately transcribe, subtitle, caption, and translate in minutes.","collaborate with teams and clients","Cost: Cost is based on the duration of the media to transcribe and the rate your plan is entitled to. There are Pay As You Go and subscription plans: see the website for details.","Drag in your audio, video, and FCPX event","Export back to your video editing application (like FCPX, Premiere, Avid) or to Word.","export to Word, subtitles, Adobe, Avid, FCPX, DaVinci Resolve","FCP X Extension and Mac app","frame-accurate transcription and translation","import of audio / video files","import of FCPX events with projects and clips and export captions, titles, and ranges","In minutes, for pennies, in 100 languages.","iOS meeting recorder/transcriber","It is easy:","It supports:","macOS app","New users get free credit to trial.","Not anymore.","Our products:","Pay (new users get 15 mins for free) & Transcribe","Simon Says is the accurate AI tool: swiftly transcribe, subtitle, caption, and translate your audio and video.","subtitle translations for international versioning","TaDa!","This application operates standalone as a macOS app and as an extension built for Final Cut Pro X.","Transcription and translation used to be frustrating.","transcription/translation languages: English, Spanish, French, German, Italian, Danish, Dutch, Finnish, Greek, Japanese, Portuguese, Russian, Swedish, and dozens more","Video AI transcription","View on Mac App Store","Web: https://simonsays.ai","world-class transcript editor and visual subtitle editor","Your transcript is ready! Bookmark, annotate, edit, and collaborate with teammates. Even preview subtitle formatting in the visual subtitle editor."]}],[{"l":"Motion Templates","p":["This will eventually be a directory of the best Motion Templates.","In the meantime, we highly recommend Motion VFX.","There's also a database of free Motion Templates on FCPX Free: The World's Largest Collection of Free FCPX Plugins."]}],[{"l":"Motion Variables","p":["@#$sourceObject_alphaHandling","@#$sourceObject_angle","@#$sourceObject_audioChannelCount","@#$sourceObject_audioSampleRate","@#$sourceObject_contentCreated","@#$sourceObject_displayFormat","@#$sourceObject_displayName","@#$sourceObject_effects","@#$sourceObject_frameDuration","@#$sourceObject_frameSize","@#$sourceObject_metaData_reel- Source Reel Name","@#$sourceObject_metadataAudioRoles","@#$sourceObject_metadataDeinterlaceType","@#$sourceObject_metadataFieldDominanceOverride","@#$sourceObject_metadataImportToApp","@#$sourceObject_metadataLocation","@#$sourceObject_metadataMediaDuration","@#$sourceObject_metadataMediaEnd","@#$sourceObject_metadataMediaStart","@#$sourceObject_metadataRoles","@#$sourceObject_metadataRotationAngle","@#$sourceObject_metadataSelectionDuration","@#$sourceObject_metadataSelectionEnd","@#$sourceObject_metadataSelectionStart","@#$sourceObject_metadataVideoRoles","@#$sourceObject_notes","@#$sourceObject_objectName","@#$sourceObject_projectOrSource- Source Clip Name","@#$sourceObject_projectOrSourceName","@#$sourceObject_reel","@#$sourceObject_sampleDuration","@#$sourceObject_scene","@#$sourceObject_sequenceName","@#$sourceObject_shot","@#$sourceObject_sourceName","@#$sourceObject_timecodeFrameDuration","@#$sourceObject_timeRange","Here's a list of text variables you can use in Motion to write data in Final Cut Pro:"]}],[{"l":"Application Bundle","p":["This document is a random collection of notes, thoughts and comments as we start to research the \"inside workings\" of Apple's Final Cut Pro package.","It's interesting to note that most of the Frameworks contained within Final Cut Pro X can also be found in Apple Motion, iMovie on iOS, iMovie on macOS and Clips on iOS."]},{"i":"what-is-a-framework","l":"What is a Framework?","p":["A framework is a bundle (a structured directory) that contains a dynamic shared library along with associated resources, such as .nib files, image files, and header files. When you develop an application, your project links to one or more frameworks. For example, iPhone application projects link by default to the Foundation, UIKit, and Core Graphics frameworks. Your code accesses the capabilities of a framework through the application programming interface (API), which is published by the framework through its header files. Because the library is dynamically shared, multiple applications can access the framework code and resources simultaneously. The system loads the code and resources of a framework into memory, as needed, and shares the one copy of a resource among all applications."]},{"l":"History Lesson","p":["Phil Pan writes on Alex4D's Facebook Page:","I worked on that team for five years. There wasn't much work done on merging Shake and FCP. Most of the advanced work done by the core Shake team focused on the Helium renderer, which today is core to Pro Apps today. Shake's genius was how it was ultra-efficient as CPU-only code. Management had little interest in Shake and most resources went to Motion and Aperture; projects that Steve could related to when he wasn't completely absorbed by the iPad, the iPhone and the iTunes business ecosystem. The author of this patent, Christophe Souchard, is a French mathematician who had tons of prior experience at Discreet/Autodesk. He joined Apple when it purchased his Senso technology, which was the first Intel-based library to do advanced image scaling and frame-rate conversion using motion vector estimation. While at Apple, Christophe's skills impressed management enough that his position was labelled \"Applied Magic\", and a veteran aerospace software engineer was hired to perform curation and clerical code management for his inventions. He introduced the team to methods using partial differential equations and while exteremely slow to compute, his next-generation prototypes performed jaw-dropping feats 15 years before similar tools would be introduced by Adobe. None of this work ever came out because Apple had a policy not to release compute-intensive software. Randy Ubillos (father of FCP and close to Steve) wouldn't accept any operation that took longer than a second per frame to render. This relegated Christophe to a research position for a while, until Randy got so impressed that he monopolized Christophe to work on advanced concepts for FCPX. Randy had some clever ideas about shot alignment and automatic editing, and this patent is the result of one of their collaborative projects. Today Christophe works at Unity Technologies doing advanced AR work, and he consults on the side when he has the time. He's recently rumored to have authored the rendering engine for ColorSynth, a complex colour grading plugin for FCPX and Premiere.","Helium was done in Santa Monica by the mad frenchmen team at Apple; Arnaud Hervas, Emmanuel Mogenet and Chrisophe Souchard. Arnaud was the co-founder of Nothing Real, the company that produced Shake. The idea was to do automatic tiled rendering using all available compute resources, so CPU cores and GPU(s). It was a lot trickier than people would think, as math functions would be rounded differently on different resources, and this would affect pixel values. The renderer has to evaluate the render graph to intelligently tile the proper regions-of-interest; i.e. it has to know the size of convolution kernels and all parts of a shader to produce tiles that will later merge properly, and it has to do all of this in real-time. Beautiful work. Emmanuel is now an executive at Google Research in Switzerland. Arnaud is growing tomatoes in Culver City, when he's not working on camera alignement software. Apple could have done a lot more in the high end, but in the last days of Steve, the company shifted its focus on the mass market and mobile devices. It was the right thing to do for all the reasons we know today (the Bottom Line being the most evident), but in so doing it hurt engineering effors in high-end imaging across the world; Adobe was going through a bad patch and the Discreet team at Autodesk was in disarray. The high-end was picked up by The Foundry: Its founder, Bruno Nicoletti (a Discreet alumnus) had the clever idea to acquire Nuke from Digital Domain and he had the skills and industry knowledge to turn it into the work-horse that it's become today. Still, Nuke is a geek's tool and there could have been an opportunity for a more artist-oriented solution in the high-end. This would not be one of Apple's pursuits: After a couple of years of soul-searching it became clear in 2007 that the future of Apple would be the iPhone and that all the Pro Apps stuff was no longer interesting. It survived nonetheless and I'd say that today the spirit of high(ish) end imaging is coming back to Apple. But so is the case at Adobe. In the end, the consumer wins and it's an exciting time to be buying graphics solutions."]},{"l":"Plugins","p":["Internally, Final Cut Pro supports and contains a number of different plugin types and formats:"]},{"l":"Compressor","p":["Contains CompressorKit.bundle- which can also be found in Compressor and Motion - it's basically the Compressor engine."]},{"l":"FCP-DAL","p":["Contains ACD.plugin- a CoreMediaIO plugin that enables the \"A/V Output\" feature in Final Cut Pro.","The CoreMediaIO Device Abstraction Layer (DAL) is analogous to CoreAudio’s Hardware Abstraction Layer (HAL). Just as the HAL deals with audio streams from audio hardware, the DAL handles video (and muxed) streams from video devices.","You can download sample DAL code here."]},{"l":"FxPlug","p":["The FxPlug SDK is a compact yet powerful image processing plug-in architecture that lets you create new effects for Final Cut Pro and Motion.","This folder contains two plugins:","FiltersLegacyPath.bundle- I believe this contains older Filters (such as the Primatte keyer) still used by Motion & Final Cut Pro.","PAECIAdaptor.fxplug- I have no idea what a PAECI is, or what this FxPlug does."]},{"i":"internalfiltersxpcpluginkit","l":"InternalFiltersXPC.pluginkit","p":["Internal filters used by Final Cut Pro & Motion."]},{"l":"MediaProviders","p":["MotionEffect.fxp- Contains Motion Particle Images, Materials and Text Styles."]},{"l":"RADPlugins","p":["Plugins for 3rd Party codecs:","Archive.RADPlug","AVCHD.RADPlug","MPEG2.RADPlug","MPEG4.RADPlug","P2.RADPlug","P2AVF.RADPlug","XDCAM.RADPlug","XDCAMFormat.RADPlug"]},{"l":"Frameworks"},{"l":"Bloodhound","p":["I'm not exactly sure what this is but I'm ASSUMING it has something to do with the more complex side of Apple Motion (possibly rendering?) - due to the following string found in the executable:","PROGRAM:Bloodhound PROJECT:Motion-29551.8.52","I don't think this is much help to CommandPost."]},{"l":"CoreMedia","p":["Represent time-based audio-visual assets with essential data types."]},{"l":"CoreMediaIO","p":["The CoreMediaIO Device Abstraction Layer (DAL) is analogous to CoreAudio’s Hardware Abstraction Layer (HAL). Just as the HAL deals with audio streams from audio hardware, the DAL handles video (and muxed) streams from video devices."]},{"l":"Flexo","p":["This seems to be one of the most important frameworks for iMovie & Final Cut Pro.","It contains:","All the default .audio.effectBundle and .effectBundle files.","The FCPX Document Type Definition's (version 1.0 to 1.6)","Compressor settings for FCPX Bundles, Library XMLs and Project XMLs","72 Fonts used internally by Final Cut Pro & iMovie","3D Luts ( VLog_to_V709_forV35_ver100.3dlut& VLog_to_V2020_forV35_20160707.3dlut)","Files for Trailers, Themes, Titles and Maps","Metadata Definitions ( DPPEditorialServices, DPPMedia& MXFMetadata)","Color Presets (in the .cboard format)","Nib files for a huge range of different Final Cut Pro & iMovie Windows & Modules.","FFLocalizable.strings which contains a huge range of different UI strings for both iMovie and Final Cut Pro","ProMSRendererTool seems to be both a video and audio rendering engine based on the ProMSRendererLocalizable.strings file.","It also contains the following Frameworks:"]},{"l":"DeepSkyLite","p":["This framework seems to be the Core Data interface for Final Cut Pro. It contains the Compiled Core Data Models."]},{"l":"FaceCoreEmbedded","p":["FaceCore is Apple's Face Recognition framework, which was acquired from Polar Rose."]},{"i":"fxplug-1","l":"FxPlug","p":["The FxPlug SDK is a compact yet powerful image processing plug-in architecture that lets you create new effects for Final Cut Pro and Motion."]},{"l":"Helium","p":["Helium looks like it's the video processing engine for Final Cut Pro, and other ProApps (i.e. there's references to Shake in some of the frameworks).","It looks like it's using OpenGL's ARB Vertex Programming language?","It contains two \"Plug-ins\":","HCache","HConverter","It contains several internal Frameworks:"]},{"l":"HeliumFilters","p":["Looks like it contains a bunch of OpenGL Shaders. Assuming it's a bunch of filters for Helium?"]},{"l":"HeliumRender","p":["Looks like it contains a bunch of OpenGL Shaders. Assuming it's the \"render\" engine for Helium?"]},{"l":"HeliumSenso","p":["Senso looks like the Optical Flow engine (possibly the same that originally came from Shake?)."]},{"l":"HeliumSensoCore","p":["Looks like more Optical Flow OpenGL functions."]},{"l":"HeliumSensoCore2","p":["More Optical Flow code - but this looks less like OpenGL functions, and more like some kind of \"interface\""]},{"l":"Lithium","p":["Looks like another Framework for doing processing on the GPU using the OpenGL Shading Language. It has references to Metal as well. I'm ASSUMING that this the main Shader code.","Has two .glsl files inside:","shadow.glsl","ShadowBlurFragShader.glsl"]},{"l":"LunaKit","p":["AppThemeBits.car: contains LOTS of PSDs of UI elements.","AppThemeBitsB.car: looks like a duplicate of AppThemeBits.car, but maybe at higher resolution (Retina version?)","Assets.car: looks like it contains all of the mouse cursors.","Commands.strings: A binary plist of Command Editor strings.","It also contains a Perl script called viddiagnose.pl. I'm ASSUMING this is a script that creates Diagnostic reports for Apple to help debug FCPX?","It contains a bunch of .car(CoreUI Archives) files, which can be extracted using Asset Catalog Tinkerer:","It contains a bunch of other interesting plain-text plist files:","It contains a human-readible plist file called Container.moduleLayout.","LKColor.plist: Colour settings for a huge range of different UI elements (for things like HUDs, etc.)","LKCursor.plist: Hotspot Locations for various mouse cursors.","LKLocalizable.strings: Binary plist which contains a few basic strings for when you trash Final Cut Pro's preferences, and copyright messages.","LunaKit.strings: Binary plist containing a list of colours (probably for the Command Editor).","ModuleKit.strings: Binary plist containing text for Window Layouts.","NOX.car: UI Elements such as Checkboxes, Buttons, Steppers, Text Fields, etc.","NOXConsumer.car: Assuming it's the same as NOX.car, except for iMovie?","NOXHud_MOTION.car: Assuming it's all the UI graphics for the HUD in Motion?","NOXHud.car: UI graphics for Final Cut Pro's HUD?","NOXInspector.car:- UI graphics for Final Cut Pro's Inspector?","NOXRevealed.car: Not sure what these graphics are? Segmented Control?","NOXToken.car: This bundle looks empty?","NOXToolbar.car: Looks like it just has two loading animations?","NOXViewer.car UI graphics for Final Cut Pro's Viewer?","NSProCommandDescriptions.strings: Binary plist containing a single key ( ChangeWindowLayout).","NSProCommandNames.strings: Binary plist containing a single key ( ChangeWindowLayout).","Several .nib files for what looks like the Command Editor?","SRColor.plist: Colour settings for a huge range of different UI elements (for things like Audio Waveforms, etc.)","SRCursor.plist: Hotspot Locations for various mouse cursors.","There are also localised files in LOTS of different languages. In the English.lproj folder for example, it contains:","This looks like the Framework that contains all of the ProApps UI elements - from Windows, to Audio Meters, to Toolbars and the Browser.","TLKColor.plist: Colour settings for various timeline elements.","WideSliderIconAppearance.car: Not sure what these graphics are for?"]},{"l":"MediaToolbox","p":["Contains interfaces for playing video and audio content."]},{"l":"MIO","p":["Not sure what MIO stands for (maybe MediaIO or CoreMediaIO?) but seems to be something to do with the reading and processing of video & audio files. Possibly also has something to do with the controlling of FireWire DV devices?"]},{"l":"Ozone","p":["Ozone looks like it's the Apple Motion render engine. This Framework is identical in both Final Cut Pro & Motion.","This framework is quite big in terms of file size as it contains things like Environment Map's and Physical Layer Assets (all in OpenEXR format).","It contains one internal Framework:"]},{"l":"AudioMixEngine","p":["As the name suggests, this looks like a Framework that handles audio mixing.","It also contains several internal Plugins:","Behaviors.ozp","Navigator.ozp","Particles.ozp","Text.ozp"]},{"l":"PluginManager","p":["As the name suggests, this looks like the Plugin Manager for Final Cut Pro.","Interestingly, it contains a property list file called 6B9D8D3C-D3BF-4276-828F-2212D24B11CE.plist which contains a list of 3rd party plugins that can only run certain versions of the plugin on certain versions of Final Cut Pro."]},{"l":"ProAppsFxSupport","p":["I'm not exactly sure what this Framework is, but given it contains a whole bunch of files such as:","BlueNoise1.tiff, BlueNoise2.tiff, BlueNoise3.tiff","GaussianNoise1.tiff, GaussianNoise2.tiff, GaussianNoise3.tiff","PinkNoise1.tiff, PinkNoise2.tiff, PinkNoise3.tiff","TVStatic1.tiff, TVStatic2.tiff, TVStatic3.tiff","WhiteNoise1.tiff, WhiteNoise2.tiff, WhiteNoise3.tiff","...and the fact it's called \"ProAppsFxSupport\", one can only assume it's a support library for some of the internal effects Apple's ProApp's take advantage of.","This Framework also exists in Motion."]},{"l":"ProChannel","p":["A shared Framework between Motion & Final Cut Pro, I assume this is something to do with colour processing."]},{"l":"ProCore","p":["Another shared Framework between Motion & Final Cut Pro, I believe this Framework also has to do with colour processing - such as blend modes, and colour space conversion."]},{"l":"ProCurveEditor","p":["I believe this Framework contains the Curve Editor used by Apple Motion."]},{"l":"ProGL","p":["The Framework that handles the OpenGL processing. I believe this creates an NSOpenGLContext(i.e. an object that represents an OpenGL graphics context, into which all OpenGL calls are rendered)."]},{"l":"ProGraphics","p":["A shared Framework between Motion & Final Cut Pro, I assume this is something to do with graphics processing."]},{"l":"ProInspector","p":["The Inspector UI used by Motion."]},{"l":"ProMedia","p":["This Framework looks like it handles support for things like RAW images and OpenEXR. It looks like it uses Metal 1.0."]},{"l":"ProOSC","p":["This looks like Motion's Framework for handling On-screen Controls.","It looks like it's doing processing on the GPU using the OpenGL Shading Language.","It has several .glsl files inside:","GammaLineFragment.glsl","RGBBackgroundFragment.glsl","RGBForegroundFragment.glsl","RGBMaskFillBackgroundFragment.glsl","RGBMaskFillForegroundFragment.glsl","RGBMaskFillVertex.glsl","RGBVertex.glsl","ShapeDashFragment.glsl","ShapeDashVertex.glsl","ShapeSmoothFragment.glsl","ShapeSmoothVertex.glsl"]},{"l":"ProShapes","p":["Motion's framework for handling Shapes.","Looks like it uses Metal 1.0, and makes uses of the Helium Renderer."]},{"l":"RetimingMath","p":["Looks like it's used by Motion to do some kind of complex retiming algorithm's."]},{"l":"Stalgo","p":["STALGO is an industrial-strength C++ software package for computing straight skeletons and mitered offset-curves."]},{"l":"StudioSharedResources","p":["This Framework just looks like it's mainly a collection of UI images used by both Motion and Final Cut Pro."]},{"l":"TextFramework","p":["Text Tools used by both Motion & Final Cut Pro.","Looks like it uses Metal 1.0."]},{"l":"TLKEventDispatcher","p":["TimeLineKit Event Dispatcher.","This looks like it's the \"backend\" to the magnetic timeline - i.e. the framework that translates user interactions (such as mouse clicks and drags) to actions with Final Cut Pro's timeline.","It looks like you register \"events\" for the timeline, and this Framework handles these requests."]},{"l":"TLKit","p":["The TimeLineKit Framework. This is the Framework that makes up the Magnetic Timeline, and also the timelines for iMovie & Motion.","It contains a bunch of .caar files, which are binary plists.","The CornerRadius.plist file allows you to adjust the corner radius of clips in the timeline.","I believe filenames that say \"SimpleMode\" refer to iMovie."]},{"l":"VideoToolbox","p":["I think this is the Framework that communicates with AV Foundations, CoreMedia, and handles video decoding, codecs, etc."]}],[{"l":"FCPXML","p":["This section of the site is dedicated to FCPXML.","You can find the official Workflow Extensions documentation here.","There's a great article called Demystifying Final Cut Pro XMLs by Philip Hodgetts and Gregory Clarke over at fcp.co."]}],[{"l":"FxPlug","p":["This section of the site is dedicated to FxPlug4.","You can find the official FxPlug4 documentation here.","If you want a real-world example of a FxPlug4 application, you can look at Gyroflow Toolbox."]}],[{"l":"iXML"},{"l":"Introduction","p":["iXML is an open standard for the inclusion of location sound metadata in Broadcast Wave audio files.","This includes things like Scene, Take and Notes information. It is designed to standardise the exchange of metadata between field recorders and post production software.","The iXML specification describes an WAV RIFF chunk in BWF files which contains standard XML data following the iXML specification.","iXML uses the XML (eXtensible Markup Language) standard for communication of tagged metadata. All fields are optional when creating iXML, and readers of iXML data must not assume or require any fields to be present.","A very simplified iXML data chunk, in a mono file with only the most basic metadata objects will look something like this:","You can read a very detailed article about iXML here."]},{"l":"Specification","p":["The iXML Specification can be found here."]},{"l":"Final Cut Pro iXML Support","p":["All of this occurs automatically on import, and the settings are retained for future import operations.","Although QuickTime files can also contain iXML metadata, as of version 10.3.3, Final Cut Pro seems to only be able to analyse WAV files on import.","As of Final Cut Pro 10.3.3, the following parameter's don't seem to be supported:","Audio Configuration Track Name","Audio Roles","CIRCLED","FALSE_START","FILE_SET","Final Cut Pro Metadata Property","Final Cut Pro Supports the following iXML fields:","Good","HISTORY","In Final Cut Pro, you can assign roles based on the iXML metadata using the Assign iXML track names if available checkbox in Import preferences.","It's important to note however that during the import, Final Cut Pro will copy this iXML metadata and store it in the Library database - it does not read the iXML metadata more than once, so if you update the iXML metadata after import, these changes will not be reflected in your Final Cut Pro Library.","iXML Parameter","NO_GOOD","NOTE","Notes","PROJECT","Reel","SCENE","SPEED","SYNC_POINT_LIST","TAKE","TAKE_TYPE","TAPE","The Assign Role setting and the Assign iXML track names if available setting can work together. For example, you can create a custom role such as Location Sound using the role editor and then choose that role from the Assign Role pop-up menu. If the Assign iXML track names if available checkbox is selected, imported clips are assigned the Location Sound role, with custom audio channel names coming from the iXML file.","TRACK_LIST: FUNCTION","TRACK: NAME","UBITS","When this checkbox is selected, Final Cut Pro analyses imported audio for iXML metadata tags, then creates subroles with the names embedded by the audio field recorder, and assigns the subroles to the corresponding components in the imported clips.","WILD_TRACK"]},{"l":"Tools","p":["The most useful tool for reading and writing iXML data is the free Sound Devices Wave Agent."]}],[{"l":"Library Bundle"},{"l":"Introduction","p":["There's very limited information out there about the Final Cut Pro library bundle.","The purpose of this article is to look inside the bundle, and explain what all its bits are and how it works. Let the adventure begin!"]},{"l":"Core Data","p":["Before we dig too deep into the Final Cut Pro library, it's important to understand one of the core technologies Apple uses in Final Cut Pro - Core Data.","Core Data is an object graph and persistence framework provided by Apple in the macOS and iOS operating systems. More than 13 years old now (at the time of writing), Core Data was introduced in Mac OS X 10.4 Tiger and iOS with iPhone SDK 3.0 and like many parts of macOS, Core Data owes much of its design to an earlier NeXT product, Enterprise Objects Framework (EOF).","You can watch the original 2004 WWDC session on Core Data here.","You can read Apple's official developer documentation on Core Data here.","Core Data is a framework that you use to manage the model layer objects in an application. It provides generalised and automated solutions to common tasks associated with object life cycle and object graph management, including persistence (meaning that, for example, an iPhone App can remember its settings each time the phone is turned off and on again).","It allows data organised by the relational entity–attribute model to be serialised into XML, binary, or SQLite stores. The data can be manipulated using higher level objects representing entities and their relationships. Core Data manages the serialised version.","Core Data can interface directly with SQLite, insulating the developer from the underlying SQL - but it's not a SQL wrapper, and offers a much higher level of abstraction. Instead of writing SQL, you can create complex queries by associating an NSPredicate object with a fetch request. However, because Core Data can use SQLite, it's easy to get confused with the differences between SQLite and Core Data. Remember that Core Data isn’t a database. If you want an Object-relational mapping (O/RM) or SQL wrapper, Core Data is not what you want.","Essentially, Core Data is a model layer technology, that's been designed to help programmers do lots of cool stuff, whilst writing less code. It's a toolkit that allows developers to more easily access and manipulate data. For example, it has built-in undo/redo management, allowing developers to add complex undo/redo functionality to their applications with minimum code.","Even though Core Data is a fantastic framework, there are several drawbacks. These drawbacks are directly related to the nature of the framework and how it works.","Core Data can only do its magic because it keeps the object graph it manages in memory. This means that it can only operate on records once they’re in memory. This is very different from performing a SQL query on a database. If you want to delete thousands of records, Core Data first needs to load each record into memory. It goes without saying that this results in memory and performance issues if done incorrectly.","Another important limitation is the threading model of Core Data. The framework expects to be run on a single thread. Fortunately, Core Data has evolved dramatically over the years and the framework has put various solutions in place to make working with Core Data in a multithreaded environment safer and easier.","For applications that need to manage a complex object graph (i.e. Final Cut Pro), Core Data is a great fit."]},{"l":"DeepSkyLite","p":["Final Cut Pro uses a lot of internal Frameworks, which you can learn more about here.","Within the Flexo Framework, is a framework called DeepSkyLite, which is essentially the \"database engine\" for Final Cut Pro.","Inside the DeepSkyLite Framework is two Compiled Core Data Models:","DSLite_v1.mom","DSLite_v2b1.mom","A .mom file is a binary property list that's NSKeyedArchiver encoded. You can easily open it up in something like BBEdit and have a look, but the easiest and best way to explore a Core Data Model is to just import it back into Xcode.","Here's what Final Cut Pro's model looks like in Xcode:","Patent Screenshot"]}],[{"l":"Patents","p":["To get an overview of how Final Cut Pro works, it's worth checking out the original parent as a PDF with images or as searchable plain text.","Here's one of the screenshots from the patent:","Patent Screenshot"]}],[{"l":"Workflow Extensions","p":["This section of the site is dedicated to Workflow Extensions.","You can find the official Workflow Extensions documentation here.","If you want a real-world example of a FxPlug4 application, you can look at CommandPost."]}],[{"l":"Contribute","p":["FCP Cafe is entirely open source and powered by GitHub.","You can make changes to the site by submitting pull requests on GitHub.","We welcome and encourage users submitting their own case studies, articles and products.","You can email us articles and sponsorship enquires here: support@latenitefilms.com","The entire site is written in Markdown, so it's very easy to modify and update without knowing any HTML or code.","For example, you can just edit the contents of this page by clicking here.","For a basic overview of how you can do pull requests on GitHub check this page.","If you have questions, you can ask them on the Discussions board."]}]]